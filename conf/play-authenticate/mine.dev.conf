#####################################################################################
#
# My play-authenticate settings
#
#####################################################################################

play-authenticate {
    afterAuthFallback="/"
	
	afterLogoutFallback="/"
	
	# If set to true, account merging is enabled, if set to false its disabled and accounts will never prompted to be merged
	# defaults to true
	accountMergeEnabled=false
	
	# if this is set to true, accounts are automatically merged
	# (e.g. if a user is logged in and uses an authentication provider
	# which has already been registered to another user prior to logging out, those two users are merged
	# Handle setting this to true this with care
	# if set to false, your resolver must not return null for askMerge()
	# defaults to false
	accountAutoMerge=false
	
	# if this is set to true, accounts are automatically linked
	# (e.g. if a user is logged in and uses a different authentication provider
	# which has NOT yet been registered to another user, this newly used authentication
	# provider gets added to the current local user
	# Handle setting this to true with care
	# If set to false, your resolver must not return null for askLink()
	# defaults to false
	accountAutoLink=false
    # Settings for the password-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    password {
        mail {
            verificationLink {
                # Whether the verification link will be HTTPS
                secure=false
            }
            passwordResetLink {
                # Whether the password reset link will be HTTPS
                secure=false
            }
            from {
                # Mailing from address
                email="mybabybox.dev@gmail.com"

                # Mailing name
                name=BabyBox
            }
            # Pause between email jobs (in seconds)
            delay=1
        }
        # Whether to directly log in after the password reset (true)
        # or send the user to the login page (false)
        loginAfterPasswordReset=true
    }

    # Settings for the foursquare-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Foursquare provider from conf/play.plugins
    foursquare {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Foursquare credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use foursquare as an authentication provider.
        # Get the credentials here: https://de.foursquare.com/oauth/
        # Remove leading '#' after entering
        # clientId=
        # clientSecret=
    }
    
    # Settings for the twitter-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Twitter provider from conf/play.plugins
    twitter {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Twitter credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use twitter as an authentication provider.
        # Get the credentials here: https://dev.twitter.com/docs/auth/oauth
        # Remove leading '#' after entering
        # consumerKey=
        # consumerSecret=
        
    }

    # Settings for the linkedin-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Linkedin provider from conf/play.plugins
    linkedin {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # Linkedin credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use linkedin as an authentication provider.
        # Get the credentials here: http://developer.linkedin.com/
        # Remove leading '#' after entering
        # The consumer key is called "API key" by linkedIn
        # consumerKey=
        # The consumer secret is called "Secret key" by linkedIn
        # consumerSecret=
        
    }

    # Settings for the facebook-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the facebook provider from conf/play.plugins
    facebook {
       redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false
            
            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        authorizationUrl="https://graph.facebook.com/oauth/authorize"
        accessTokenUrl="https://graph.facebook.com/oauth/access_token"
        userInfoUrl="https://graph.facebook.com/me"

        # Comma-separated list of fields to retrieve from this Facebook user.
        # See possible values here: https://developers.facebook.com/docs/reference/api/user/
        # Note that some fields may require additional permissions on your Facebook App.
        userInfoFields="id,email,cover,name,first_name,last_name,birthday,gender,age_range,relationship_status,link,timezone,locale,education,verified,updated_time"

        #scope="email,user_birthday,user_friends"
        scope="email,user_friends"
        
        # Get the credentials here: https://developers.facebook.com/apps
        # Remove leading '#' after entering:
        #clientId=1469039100069403
        #clientSecret=44f1e449a981f4e5386e25b2646c58f7
        clientId=1469031873403459
        clientSecret=1f9b43324514e8cfe76a2275d05aae28
    }

    # Settings for the google-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Google provider from conf/play.plugins
    google {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false
            
            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        userInfoUrl="https://www.googleapis.com/oauth2/v1/userinfo"
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"

        # Additional parameters - Read more about them here: https://developers.google.com/accounts/docs/OAuth2WebServer#offline
        # accessType="offline"
        # approvalPrompt="force"
        
        # Get the credentials here: https://code.google.com/apis/console
        # Remove leading '#' after entering:
         clientId=abc
         clientSecret=abc
    }

    # Settings for the VK-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the VK provider from conf/play.plugins
    vk {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }

        # VK credentials
        # These are mandatory for using OAuth and need to be provided by you,
        # if you want to use VK.com as an authentication provider.
        # Get them here: http://vk.com/editapp?act=create
        # Called 'Application ID' and 'Secure key'
        # Remove leading '#' after entering
        # clientId=
        # clientSecret=
    }

    # Settings for the OpenID-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the OpenID provider from conf/play.plugins
    openid {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
    }
    
    # Settings for the XING-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the XING provider from conf/play.plugins
    xing {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        
        # XING credentials
        # Get them here: https://dev.xing.com/
        # consumerKey=
        # consumerSecret=
    }

    # Settings for the Untappd-based authentication provider
    # if you are not using it, you can remove this portion of the config file
    # and remove the Untappd provider from conf/play.plugins
    untappd {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        
        # Untappd credentials
        # Get them here: https://untappd.com/api/
        # clientId= 
        # clientSecret= 
    }

    # The Pocket settings
    pocket {
        redirectUri {
            # Whether the redirect URI scheme should be HTTP or HTTPS (HTTP by default)
            secure=false

            # You can use this setting to override the automatic detection
            # of the host used for the redirect URI (helpful if your service is running behind a CDN for example)
            # host=yourdomain.com
        }
        
        # Pocket credentials
        # Get them here: http://getpocket.com/developer/apps/new
        # consumerKey=
    }
}
