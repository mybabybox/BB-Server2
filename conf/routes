# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

GET     /sitemap.xml                controllers.Assets.at(path="/public",file="app/sitemap.xml")
GET     /robots.txt                 controllers.Assets.at(path="/public",file="app/robots.txt")

# Google Webmaster
GET     /googlee42c6d2bf91e90b7.html    controllers.Application.googleWebmaster

GET     /favicon.ico                controllers.Assets.at(path="/public", file="app/images/favicon-1.ico")
GET     /assets/javascript/routes.js    controllers.Application.jsRoutes
GET     /privacy                    controllers.Application.privacy
GET     /terms                      controllers.Application.terms

GET     /restricted                 controllers.Application.restricted
GET     /profile/:id                controllers.UserController.profile(id: Long)
GET     /profile                    controllers.Application.profile

# Main
GET     /                           controllers.Application.index
GET     /my                         controllers.Application.mainHome
GET     /login                      controllers.Application.login

# Home
GET     /signup-promo-code/:promoCode   controllers.Application.signupWithPromoCode(promoCode:String)
#GET    /signup-code/:promoCode     controllers.Application.signupWithPromoCode(promoCode:String)
GET     /signup-code/:promoCode     controllers.Application.detailsForPromoCode(promoCode:String)

POST    /login                      controllers.Application.doLogin
POST    /login-popup                controllers.Application.doLoginPopup
POST    /saveSignupInfo             controllers.Application.saveSignupInfo
POST    /saveSignupInfoFb           controllers.Application.saveSignupInfoFb
GET     /get-application-info       controllers.Application.getApplicationInfo
GET     /get-user-target-profile    controllers.Application.getUserTargetProfile
GET     /init-new-user              controllers.Application.initNewUser

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /authenticatePopup/:provider    com.feth.play.module.pa.controllers.Authenticate.authenticatePopup(provider: String)
 
GET     /signup                     controllers.Application.signup
POST    /signup                     controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET     /accounts/password/change   controllers.Account.changePassword
POST    /accounts/password/change   controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot      controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot      controllers.Signup.doForgotPassword


# User Info Service
GET     /get-user-info              controllers.UserController.getUserInfo
GET     /about-user                 controllers.UserController.aboutUser
POST    /updateUserProfileData      controllers.UserController.updateUserProfileData

# Gcm
POST	/save-gcm-key/:key/:versionCode            controllers.UserController.saveGcmKey(key:String, versionCode:Long)

# Conversation
GET     /get-all-conversations                      controllers.UserController.getAllConversations()
GET     /get-post-conversations/:id                 controllers.ProductController.getConversations(id:Long)
GET     /get-conversation/:id                       controllers.UserController.getConversation(id:Long)
GET     /get-messages/:conversationId/:offset       controllers.UserController.getMessages(conversationId: Long, offset: Long)
GET     /open-conversation/:postId                  controllers.UserController.openConversation(postId: Long)
GET     /delete-conversation/:id                    controllers.UserController.deleteConversation(id: Long)
POST    /message/new                                controllers.UserController.newMessage()
GET     /get-unread-message-count                   controllers.UserController.getUnreadMessageCount()

# ConversationOrder
GET     /conversation-order/new                     controllers.UserController.newConversationOrder(conversationId:Long)
GET     /conversation-order/cancel                  controllers.UserController.cancelConversationOrder(id:Long)
GET     /conversation-order/accept                  controllers.UserController.acceptConversationOrder(id:Long)
GET     /conversation-order/decline                 controllers.UserController.declineConversationOrder(id:Long)

# Product
GET		/get-category-popular-feed/:id/:postType/:offset		controllers.ProductController.getCategoryPopularFeed(id :Long, postType: String, offset: Long)
GET		/get-category-newest-feed/:id/:postType/:offset			controllers.ProductController.getCategoryNewestFeed(id :Long, postType: String, offset: Long)
GET		/get-category-price-low-high-feed/:id/:postType/:offset	controllers.ProductController.getCategoryPriceLowHighFeed(id :Long, postType: String, offset: Long)
GET		/get-category-price-high-low-feed/:id/:postType/:offset	controllers.ProductController.getCategoryPriceHighLowFeed(id :Long, postType: String, offset: Long)
GET		/get-home-explore-feed/:offset							controllers.UserController.getHomeExploreFeed(offset: Long)
GET     /get-home-following-feed/:offset                        controllers.UserController.getHomeFollowingFeed(offset: Long)
GET		/get-suggested-products/:id								controllers.ProductController.getSuggestedProducts(id :Long)						

POST    /post/new                                   controllers.ProductController.createProduct()
POST	/web/post/new		 		             	controllers.ProductController.createProductWeb()
POST    /post/edit                                  controllers.ProductController.editProduct()
POST    /web/post/edit                              controllers.ProductController.editProductWeb()
GET     /get-all-feed-products       				controllers.ProductController.getAllFeedProducts
GET     /get-all-similar-products       			controllers.ProductController.getAllSimilarProducts
GET     /product/:id            		     		controllers.ProductController.product(id:Long)
GET     /like-post/:id          					controllers.ProductController.likePost(id:Long)
GET     /unlike-post/:id        					controllers.ProductController.unlikePost(id:Long)
GET     /sold-post/:id                              controllers.ProductController.soldPost(id:Long)
POST	/comment/new								controllers.ProductController.newComment
GET     /view-product/:id        					controllers.ProductController.onView(id:Long)
POST	/create-collection		             		controllers.ProductController.createCollection
POST	/product/add-to-collection					controllers.ProductController.addToCollection
GET		/post/:id									controllers.ProductController.getProductInfo(id:Long)
GET     /post/delete/:id                            controllers.ProductController.deletePost(id:Long)
GET     /comment/delete/:id                         controllers.ProductController.deleteComment(id:Long)
GET     /comments/:postId/:offset                   controllers.ProductController.getPostComments(postId: Long,offset:Long)

# User
GET     /get-user-posted-feed/:id/:offset       	controllers.UserController.getUserPosts(id: Long, offset:Long)
GET     /collections/:id							controllers.UserController.getUserCollections(id: Long)
GET     /follow-user/:id          					controllers.UserController.followUser(id:Long)
GET     /unfollow-user/:id        					controllers.UserController.unfollowUser(id:Long)
GET		/get-user/:id								controllers.UserController.getUserInfoById(id:Long)
GET     /followings/:id/:offset						controllers.UserController.getFollowings(id: Long,offset:Long)
GET     /followers/:id/:offset						controllers.UserController.getFollowers(id: Long,offset:Long)
GET     /get-user-liked-feed/:id/:offset			controllers.UserController.getUserLikedPosts(id: Long,offset:Long)
GET     /notification-counter                       controllers.UserController.getNotificationCounter
GET     /reset-activities-count                     controllers.UserController.resetActivitiesCount
GET     /reset-conversations-count                  controllers.UserController.resetConversationsCount
GET		/get-activities/:offset				    	controllers.UserController.getActivities(offset:Long)

# image upload
POST    /image/upload-profile-photo                 controllers.UserController.uploadProfilePhoto
POST    /image/upload-cover-photo                   controllers.UserController.uploadCoverPhoto
POST    /image/upload-message-photo                 controllers.UserController.uploadMessagePhoto

# image get
GET     /image/get-profile-image                    controllers.UserController.getProfileImage
GET     /image/get-profile-image-by-id/:id          controllers.UserController.getProfileImageById(id:Long)
GET     /image/get-thumbnail-profile-image-by-id/:id    controllers.UserController.getThumbnailProfileImageById(id :Long)
GET     /image/get-mini-profile-image-by-id/:id     controllers.UserController.getMiniProfileImageById(id :Long)
GET     /image/get-cover-image-by-id/:id            controllers.UserController.getCoverImageById(id :Long)
GET     /image/get-thumbnail-cover-image-by-id/:id  controllers.UserController.getThumbnailCoverImageById(id :Long)
GET     /image/get-post-image-by-id/:id             controllers.ProductController.getProductImageById(id :Long)
GET     /image/get-original-post-image-by-id/:id    controllers.ProductController.getOriginalProductImageById(id :Long)
GET     /image/get-mini-post-image-by-id/:id        controllers.ProductController.getMiniProductImageById(id :Long)
GET     /image/get-message-image-by-id/:id          controllers.UserController.getMessageImageById(id :Long)
GET     /image/get-original-message-image-by-id/:id controllers.UserController.getOriginalMessageImageById(id :Long)
GET     /image/get-mini-message-image-by-id/:id     controllers.UserController.getMiniMessageImageById(id :Long)
GET     /image/getEmoticons                         controllers.UserController.getEmoticons()

# misc
GET     /get-all-districts                          controllers.Application.getAllDistricts

# category
GET     /categories                                 controllers.Application.getCategories()
GET     /category/:id                               controllers.Application.getCategory(id:Long)

# web
GET     /add/product                                controllers.Application.addProduct
GET     /add/story                                  controllers.Application.addStory

# mobile
POST    /mobile/login                               controllers.Application.doMobileLogin
POST    /authenticate/mobile/:provider              com.feth.play.module.pa.controllers.Authenticate.mobileAuthenticate(provider: String)

# admin
GET     /adjust-up-post-score/:id                   controllers.ProductController.adjustUpPostScore(id:Long)
GET     /adjust-down-post-score/:id                 controllers.ProductController.adjustDownPostScore(id:Long)
GET     /reset-adjust-post-score/:id                controllers.ProductController.resetAdjustPostScore(id:Long)